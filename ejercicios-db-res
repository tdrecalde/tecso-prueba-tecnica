----EJERCICIOS
-- SOLO ES REQUERIDO REALIZAR LOS EJERCICIOS DE COMPLEJIDAD BAJA, realizar los demas ejercicios serán puntos extras para la evaluación del examen.


--- EJERCICIO 1 - COMPLEJIDAD BAJA: 
--Realizar una consulta para consultar todos los alumnos existentes, mostrar: TipoDoc, Documento, Nombre, Apellido, Legajo.

select p.tipodoc, p.documento, p.nombre, p.apellido, a.legajo
from persona p 
join alumno a on p.identificador = a.identificador
;

--- EJERCICIO 2 - COMPLEJIDAD BAJA: 
--Realizar una consulta para consultar todas las carreras a la que un alumno esta inscripto, mostrar: Legajo, nombre, apellido, 
--nombre carrera, fechainscripcioncarrera ordenado por legajo descendiente

select a.legajo, p.nombre, p.apellido, c.nombre, ic.fechainscripcion
from persona p 
join alumno a on p.identificador = a.identificador
join inscripciones_carrera ic on ic.idalumno = a.identificador
join carrera c on c.identificador = ic.idcarrera
order by a.legajo desc
;

--- EJERCICIO 3 - COMPLEJIDAD MEDIA: 
--Realizar una consulta para consultar la cantidad de inscriptos por curso, mostrando: nombre carrera, nombre curso, cantidad 
--inscriptos, cupo máximo por curso

select ca.nombre as nombre_carrera, cu.nombre as nombre_curso, count(cu.*) as cantidad_de_inscriptos, cu.cupomaximo
from curso cu
join carrera ca on ca.identificador = cu.idcarrera
join inscripciones_curso icu ON icu.idcurso = cu.identificador
GROUP by 1, 2, 4
;

--- EJERCICIO 4 - COMPLEJIDAD ALTA: 
--Sobre la consulta anterior (copiar y pegarla y modificarla) modificar la sql para que la consulta retorne solo los cursos cuya cantidad de inscripciones 
--supera su cupo maximo

select ca.nombre as nombre_carrera, cu.nombre as nombre_curso, count(cu.*) as cantidad_de_inscriptos, cu.cupomaximo as cupomaximo
from curso cu
join carrera ca on ca.identificador = cu.idcarrera
join inscripciones_curso icu ON icu.idcurso = cu.identificador
group by 1, 2, 4
having cupomaximo < count(cu.*)
;


--- EJERCICIO 5 -  COMPLEJIDAD BAJA: 
-- actualizar todos las cursos que posean anio 2018 y cuyo cupo sea menor a 5, y actualizar el cupo de todos ellos a 10.

update curso cu
set cupomaximo = 10
where cu.cupomaximo < 5
and cu.anio = 2018
;

--- EJERCICIO 6 -  COMPLEJIDAD ALTA: 
-- actualizar todas las fechas de inscripcion a cursados que posean el siguiente error: la fecha de inscripcion al cursado de un 
-- alumno es menor a la fecha de inscripcion a la carrera. La nueva fecha que debe tener es la fecha del dia. Se puede hacer en dos pasos, primero
-- realizando la consulta y luego realizando el update manual

update inscripciones_curso icu
set fechainscripcion = current_date
where icu.idalumno in (
	select a.identificador
	from alumno a
	join inscripciones_carrera ica on a.identificador = ica.idalumno
	join carrera ca ON ca.identificador = ica.idcarrera
	join curso cu on cu.idcarrera = ca.identificador
	join inscripciones_curso icu on cu.identificador = icu.idcurso
	where icu.fechainscripcion < ica.fechainscripcion
)
;

--- EJERCICIO 7 - COMPLEJIDAD BAJA:  
--INSERTAR un nuevo registro de alumno con tus datos personales, (hacer todos inserts que considera necesario)

insert into persona(identificador, tipodoc, documento, nombre, apellido, fechanac)
values ((select (max(identificador) + 1) from persona), 'DNI', '30000000', 'Juan', 'Pérez', '1990-12-31');

insert into alumno(identificador, idpersona,legajo)
values((select (max(identificador) + 1) from alumno),(select max(identificador) from persona), 12345)

--- EJERCICIO 8 -  COMPLEJIDAD BAJA: 
-- si se desea comenzar a persistir de ahora en mas el dato de direccion de un alumno y considerando que este es un único
-- cambio string de 200 caracteres.
-- Determine sobre que tabla seria mas conveniente persistir esta información y realizar la modificación de estructuras correspondientes.

alter table persona ADD COLUMN direccion character(200);

